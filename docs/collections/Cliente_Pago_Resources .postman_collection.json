{
	"info": {
		"_postman_id": "59e11907-0bf1-40bd-9ee7-a51fad3d51dc",
		"name": "Cliente_Pago_Resources ",
		"description": "Colección de las pruebas CRUD de los recursos clientes y pagos. Aparte de reglas de negocio de estas mismas.",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "POST agregar Cliente",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bbcc2e36-e2d5-4681-a928-4b98be11b4a3",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_cliente\",data.id);",
							"tests[\"no genera error en el Post\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n     \"login\":\"AquiseinsertOOOO\",\n\n     \"contrasenia\":\"00000001\",\n\n     \"email\":\"unemailnotanalgo@cosas.com\",\n     \n     \n    \n     \"fechaNacimiento\":\"08/12/1996\"\n    \n}"
				},
				"url": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/clientes",
				"description": "Se busca agregar un único cliente a la base de datos a través de PostMan."
			},
			"response": []
		},
		{
			"name": "POST agregar Pagos",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "40ce27ee-9a19-4e84-81c8-1b7178e453c8",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_pago\",data.id);",
							"tests[\"no genera error en el Post\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\n\t\"usuario\":\"Aquiseinsertaunlogin\",\n\t\"numeroTarjetaCredito\":5555555555554444,\n\t\"codigoSeguridadTarjeta\":123,\n\t\"fechaExpiracionTarjetaCredito\":\"11/21\",\n\t\"nombreTarjeta\":\"LAURA FABIO\",\n\t\"empresa\":\"MasterCard\"\n\n\n\n     \n    \n\n}"
				},
				"url": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/clientes/{{new_id_cliente}}/pagos",
				"description": "Se busca agregar a un único cliente de la base de datos, los pagos a través de PostMan."
			},
			"response": []
		},
		{
			"name": "POST agregar pago a un cliente que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5f97d655-750f-4cca-a13a-b2db9d3462a9",
						"type": "text/javascript",
						"exec": [
							"tests[\"No se puede asociar un pago a un cliente que no existe.\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /clientes/0/pagos no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\n\t\"usuario\":\"Aquiseinsertaunlogin\",\n\t\"numeroTarjetaCredito\":5555555555554444,\n\t\"codigoSeguridadTarjeta\":123,\n\t\"fechaExpiracionTarjetaCredito\":\"11/21\",\n\t\"nombreTarjeta\":\"LAURA FABIO\",\n\t\"empresa\":\"MasterCard\"\n\n\n\n     \n    \n\n}"
				},
				"url": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/clientes/0/pagos",
				"description": "Se busca agregar a un cliente inexistente en la base de datos, los pagos a través de PostMan."
			},
			"response": []
		},
		{
			"name": "PUT modificar Cliente",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "55461c96-370e-4e7b-8b72-2ccee7a0d406",
						"type": "text/javascript",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Put\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"login\":\"Aquiseinsertaalgo\",\n\n     \"contrasenia\":\"00005001\",\n\n     \"email\":\"unemailnotanalgo@cosas.com\",\n     \n     \n    \n     \"fechaNacimiento\":\"08/12/1996\"\n}"
				},
				"url": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/clientes/{{new_id_cliente}}",
				"description": "Se busca modificar un único cliente de la base de datos a través de PostMan."
			},
			"response": []
		},
		{
			"name": "PUT modificar Pago",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "48926cd5-535f-4d1e-89c3-a1ce4437a3d2",
						"type": "text/javascript",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Put\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\n\t\"usuario\":\"Aquiseinsertaunlogin\",\n\t\"numeroTarjetaCredito\":5555555555554444,\n\t\"codigoSeguridadTarjeta\":123,\n\t\"fechaExpiracionTarjetaCredito\":\"11/21\",\n\t\"nombreTarjeta\":\"LAURA JOSE\",\n\t\"empresa\":\"MasterCard\"\n\n\n\n     \n    \n\n}"
				},
				"url": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/clientes/{{new_id_cliente}}/pagos/{{new_id_pago}}",
				"description": "Se busca modificar un pago de un único cliente de la base de datos a través de PostMan."
			},
			"response": []
		},
		{
			"name": "PUT modificar pago que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6d9aff60-56c7-40ec-b581-65f03b4750f4",
						"type": "text/javascript",
						"exec": [
							"tests[\"No se puede editar un pago que no existe.\"] = responseCode.code === 404;",
							"let idCliente = pm.variables.get(\"new_id_cliente\");",
							"",
							"tests[\"Mensaje correcto de error\"] = responseBody.has('El recurso /clientes/'+idCliente+'/pagos/0 no existe.');"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\n\t\"usuario\":\"Aquiseinsertaunlogin\",\n\t\"numeroTarjetaCredito\":5555555555554444,\n\t\"codigoSeguridadTarjeta\":123,\n\t\"fechaExpiracionTarjetaCredito\":\"11/21\",\n\t\"nombreTarjeta\":\"LAURA JOSE\",\n\t\"empresa\":\"MasterCard\"\n\n\n\n     \n    \n\n}"
				},
				"url": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/clientes/{{new_id_cliente}}/pagos/0",
				"description": "Se busca modificar un pago que no existe de un único cliente de la base de datos a través de PostMan."
			},
			"response": []
		},
		{
			"name": "PUT modificar pago de cliente que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c00bfe9e-382a-4c7f-ae62-209983adde3a",
						"type": "text/javascript",
						"exec": [
							"tests[\"No se puede editar un pago que no existe.\"] = responseCode.code === 404;",
							"let idCliente = pm.variables.get(\"new_id_cliente\");",
							"",
							"tests[\"Mensaje correcto de error\"] = responseBody.has('El recurso /clientes/0/pagos no existe.');"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\n\t\"usuario\":\"Aquiseinsertaunlogin\",\n\t\"numeroTarjetaCredito\":5555555555554444,\n\t\"codigoSeguridadTarjeta\":123,\n\t\"fechaExpiracionTarjetaCredito\":\"11/21\",\n\t\"nombreTarjeta\":\"LAURA JOSE\",\n\t\"empresa\":\"MasterCard\"\n\n\n\n     \n    \n\n}"
				},
				"url": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/clientes/0/pagos/{{new_id_pago}}",
				"description": "Se busca modificar un pago que de un cliente que no existe a través de PostMan."
			},
			"response": []
		},
		{
			"name": "GET obtener Cliente",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "787449c7-0755-46b9-b1d7-72a6d58cbd76",
						"type": "text/javascript",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/clientes/{{new_id_cliente}}",
				"description": "Se busca obtener un único cliente de la base de datos a través de PostMan."
			},
			"response": []
		},
		{
			"name": "GET obtener cliente que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4308a0ae-e08b-41bc-8d0f-6992c8f39eac",
						"type": "text/javascript",
						"exec": [
							"tests[\"No consulta con id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /clientes/0 no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/clientes/0",
				"description": "Se busca obtener un cliente que no existe en la base de datos. A través de postaman se mostraran los errores."
			},
			"response": []
		},
		{
			"name": "GET obtener Pago",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "46e05d1c-256c-4602-bc57-0f7e95ef4b61",
						"type": "text/javascript",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/clientes/{{new_id_cliente}}/pagos/{{new_id_pago}}",
				"description": "Se busca obtener un único cliente de la base de datos a través de PostMan."
			},
			"response": []
		},
		{
			"name": "GET obtener pago que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "873aeab1-3d47-4b21-a563-461257292bb1",
						"type": "text/javascript",
						"exec": [
							"tests[\"No consulta con id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /clientes/10/pagos/0 no existe\");"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/clientes/{{new_id_cliente}}/pagos/0",
				"description": "Se busca obtener un pago inexistente en la base de datos. En postman se mostrara un mensaje de error de acuerdo a esto."
			},
			"response": []
		},
		{
			"name": "DELETE borrar Cliente",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b3a3a3fc-ac0e-4924-9848-d99b64c90163",
						"type": "text/javascript",
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/clientes/{{new_id_cliente}}",
				"description": "Se busca eliminar un único cliente de la base de datos a través de PostMan"
			},
			"response": []
		},
		{
			"name": "DELETE borrar cliente que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8dbc0787-1692-4108-946f-868e95bf9f54",
						"type": "text/javascript",
						"exec": [
							"tests[\"No se puede borrar un cliente que no existe.\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /clientes/0 no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/clientes/0",
				"description": "Se busca eliminar un cliente inexistente a través de PostMan"
			},
			"response": []
		},
		{
			"name": "DELETE borrar Pago",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c9b9d164-a6c8-4d58-a75d-2c559fb3bdb5",
						"type": "text/javascript",
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/api/clientes/{{new_id_cliente}}/pagos/{{new_id_pago}}",
				"description": "Se busca eliminar un pago de un único cliente de la base de datos a través de PostMan"
			},
			"response": []
		},
		{
			"name": "DELETE borrar Pago que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5cbb90aa-a07a-495b-9157-bfada986da30",
						"type": "text/javascript",
						"exec": [
							"tests[\"No se puede borrar un pago que no existe.\"] = responseCode.code === 404;",
							"let id = pm.variables.get(\"new_id_cliente\");",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /clientes/\"+id+\"/pagos/0 no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/clientes/{{new_id_cliente}}/pagos/0",
				"description": "Se busca eliminar un pago que no existe a través de PostMan"
			},
			"response": []
		},
		{
			"name": "GET obtener todos los Clientes",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "38d42704-3cee-418b-9b7d-e15c64025026",
						"type": "text/javascript",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;",
							"tests[\"clientes count\"] = data.length > 1;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/clientes",
				"description": "Se busca obtener todos los clientes creados hasta ahora (2). Estos se encuentran en la dirección /clientes/. Si los clientes se encunetran vacíos, por favor ejecute la función \"POST agregar Cliente\" antes."
			},
			"response": []
		},
		{
			"name": "GET obtener todos los Pagos",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e0b1d093-76c1-443f-a9ef-7528d4df296d",
						"type": "text/javascript",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;",
							"tests[\"pagos count\"] = data.length >= 0;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/clientes/{{new_id_cliente}}/pagos",
				"description": "Se busca obtener todos los pagos de un cliente en específico. Estos pagos se encuentran en la posición /pagos/ y hasta ahora se han creado 2. Si la anterior suposición no es cierta, intente crear pagos con la función \"POST agregar Pagos\"."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "01eba6ad-5590-4dd4-a23f-b8dbf426d04b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "0fdf36a3-3aa2-41df-a088-0fd0de56e927",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}