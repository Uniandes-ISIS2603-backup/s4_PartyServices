{
	"info": {
		"_postman_id": "93ef2a47-4255-43fd-8e41-21f13d494b81",
		"name": "Valoracion Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Crear un proveedor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b78a8b2e-bc32-41e8-8934-1e14b2e0b146",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_proveedorValoracion\",data.id);",
							"tests[\"no genera error en el Post\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\":\"Jesus\",\n    \"contrasenia\":\"987654321\",\n    \"calificacion\":10,\n    \"agenda\":{}\n    \n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/proveedor",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_PartyServices-api",
						"api",
						"proveedor"
					]
				},
				"description": "Crea un nuevo proveedor con un nombre, una contraseña, una calificacion y una agenda asociada. El Id es inicializado por la BD y se debe ver en la respuesta. \r\n\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Crearle una valoración a un proveedor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a91773d6-9f8a-4f18-a21f-542bfa4891eb",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_valoracion\",data.id);",
							"tests[\"no genera error en el Post\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"puntaje\":10,\n\t\"comentario\":\"Muy buen servicio! Así se hace\",\n\t\"nombreUsuario\":\"Cesar\"\n\t\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/proveedor/{{new_id_proveedorValoracion}}/valoraciones",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_PartyServices-api",
						"api",
						"proveedor",
						"{{new_id_proveedorValoracion}}",
						"valoraciones"
					]
				},
				"description": "Crea una nueva valoracion. El Id es inicializado por la BD y se debe ver en la respuesta. \r\n\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Crearle una valoración a un proveedor que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dcfa1666-a7af-4d1a-a926-4f5f4e473e69",
						"type": "text/javascript",
						"exec": [
							"tests[\"No se puede asociar una valoracion a un proveedor que no existe.\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /proveedores/0/valoraciones no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"puntaje\":10,\n\t\"comentario\":\"Muy buen servicio!\",\n\t\"nombreUsuario\":\"Cesar\"\n\t\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/proveedor/0/valoraciones",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_PartyServices-api",
						"api",
						"proveedor",
						"0",
						"valoraciones"
					]
				},
				"description": "Crea un nueva nueva valroacion pero con un proveedor que no existe. Verifica que se genera el error y el mensaje \"El recurso /proveedor/0/valoraciones no existe\".\n\n**Código HTTP esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Obtener las valoraciones de un proveedor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "623a308e-a4f2-40b8-861b-960cbabf608b",
						"type": "text/javascript",
						"exec": [
							"var data= JSON.parse(responseBody);",
							"tests[\"no genera error en el Get All\"] = responseCode.code === 200;",
							"tests[\"reviews count\"] = data.length >= 0;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\n\t\"nombre\":\"hola3\",\n\t\"contrasenia\":\"12345678\",\n\t\"calificacion\":9\n\t\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/proveedor/{{new_id_proveedorValoracion}}/valoraciones",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_PartyServices-api",
						"api",
						"proveedor",
						"{{new_id_proveedorValoracion}}",
						"valoraciones"
					]
				},
				"description": "Consulta las valoraciones de un proveedor en la aplicación. \r\nLa petición no tiene cuerpo.\r\n\r\nSe envía el Id del proveedor a consultar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener una valoracion de un proveedor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4a7b8e51-7428-4108-8a55-49c51930b76d",
						"type": "text/javascript",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"no genera error en el Get\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\n\t\"nombre\":\"hola3\",\n\t\"contrasenia\":\"12345678\",\n\t\"calificacion\":9\n\t\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/proveedor/{{new_id_proveedorValoracion}}/valoraciones/{{new_id_valoracion}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_PartyServices-api",
						"api",
						"proveedor",
						"{{new_id_proveedorValoracion}}",
						"valoraciones",
						"{{new_id_valoracion}}"
					]
				},
				"description": "Consulta una valoracion de un proveedor en la aplicación. \r\nLa petición no tiene cuerpo.\r\n\r\nSe envía el Id del proveedor y de la valoracion a consultar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Editarle una valoracion a un proveedor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "34abae7d-f14d-41be-b01a-65524c5f9ea3",
						"type": "text/javascript",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"no genera error en el Put\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"puntaje\":8,\n\t\"comentario\":\"Muy buen servicio! Pero faltó un poco de calidad en las sillas\",\n\t\"nombreUsuario\":\"Cesar\"\n\t\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/proveedor/{{new_id_proveedorValoracion}}/valoraciones/{{new_id_valoracion}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_PartyServices-api",
						"api",
						"proveedor",
						"{{new_id_proveedorValoracion}}",
						"valoraciones",
						"{{new_id_valoracion}}"
					]
				},
				"description": "Actualiza una valoracion a un proveedor existente. Se envían los Ids de las entidades asociar en la URL de la petición.\n\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Editarle una valoracion que no existe a un proveedor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "802be935-7bc2-44ac-800b-1352c6e7d353",
						"type": "text/javascript",
						"exec": [
							"tests[\"No se puede editar una valoracion que no existe.\"] = responseCode.code === 404;",
							"let id = pm.variables.get(\"new_id_proveedorValoracion\");",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /proveedores/\"+id+\"/valoraciones/0 no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\n\t\"puntaje\":7,\n\t\"comentario\":\"Muy buen servicio! Pero faltó un poco de calidad en las sillas\",\n\t\"nombreUsuario\":\"Cesar\"\n\t\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/proveedor/{{new_id_proveedorValoracion}}/valoraciones/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_PartyServices-api",
						"api",
						"proveedor",
						"{{new_id_proveedorValoracion}}",
						"valoraciones",
						"0"
					]
				},
				"description": "Asocia una valoracion que no existe a un proveedor. \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /proveedor/0 no existe.\".\r\n\r\n**Código HTTP esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Editarle una valoracion a un proveedor que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "64a96e8a-1535-4176-8615-049313b88aa6",
						"type": "text/javascript",
						"exec": [
							"tests[\"No se puede editar una valoracion sobre un proveedor que no existe.\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /proveedores/0/valoraciones no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\n\t\"puntaje\":6,\n\t\"comentario\":\"Muy buen servicio! Pero faltó un poco de calidad en las sillas\",\n\t\"nombreUsuario\":\"Cesar\"\n\t\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/proveedor/0/valoraciones/{{new_id_valoracion}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_PartyServices-api",
						"api",
						"proveedor",
						"0",
						"valoraciones",
						"{{new_id_valoracion}}"
					]
				},
				"description": "Asocia una valoracion a un proveedor que no existe.\r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /proveedor/0 no existe.\".\r\n\r\n**Código HTTP esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Borrarle una valoracion a un proveedor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "938f535a-a8ad-4972-9e09-0826481fa695",
						"type": "text/javascript",
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/proveedor/{{new_id_proveedorValoracion}}/valoraciones/{{new_id_valoracion}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_PartyServices-api",
						"api",
						"proveedor",
						"{{new_id_proveedorValoracion}}",
						"valoraciones",
						"{{new_id_valoracion}}"
					]
				},
				"description": "Borra una valoracion asociada a un proveedor. Se envían los ids de la valroacion y el proveedor creados anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrarle una valoracion que no existe a un proveedor ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "86f6ac72-08b9-4312-924b-69234351e7c1",
						"type": "text/javascript",
						"exec": [
							"tests[\"No se puede borrar una valoracion que no existe.\"] = responseCode.code === 404;",
							"let id = pm.variables.get(\"new_id_proveedorValoracion\");",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /proveedores/\"+id+\"/valoraciones/0 no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/proveedor/{{new_id_proveedorValoracion}}/valoraciones/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_PartyServices-api",
						"api",
						"proveedor",
						"{{new_id_proveedorValoracion}}",
						"valoraciones",
						"0"
					]
				},
				"description": "Borra una valoracion que no existe en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error.\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Borrarle una valoracion a un proveedor que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "befbf298-a33d-4021-8aac-252f21d822fa",
						"type": "text/javascript",
						"exec": [
							"tests[\"No se puede borrar una valoracion sobre un proveedor que no existe.\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /proveedores/0/valoraciones no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/proveedor/0/valoraciones/{{new_id_valoracion}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_PartyServices-api",
						"api",
						"proveedor",
						"0",
						"valoraciones",
						"{{new_id_valoracion}}"
					]
				},
				"description": "Borra una valoracion a un proveedor que no existe en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /proveedor/0/valoraciones no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Borrar un proveedor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "17069a29-6172-4339-83a5-1dbd34b488e4",
						"type": "text/javascript",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_PartyServices-api/api/proveedor/{{new_id_proveedorValoracion}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_PartyServices-api",
						"api",
						"proveedor",
						"{{new_id_proveedorValoracion}}"
					]
				},
				"description": "Borra un proveedor. Se envía el id del proveedor creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "9814a154-98fd-443c-a052-1ac9d8f4fe02",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "c4f2e5c6-1da2-4e7b-a89d-21bebf659702",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}